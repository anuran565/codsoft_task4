#welcome.py
import tkinter as tk
from tkinter import Button, StringVar, messagebox
from PIL import Image, ImageTk
import subprocess

def please_continue():
    username_entry_text = usernameValue.get().strip()  # Strip spaces
    if not username_entry_text:
        messagebox.showinfo("", "Please enter your username.")
    else:
        messagebox.showinfo("", "Let's Play")
        subprocess.Popen(["python", "main.py"])  # Run only if username is entered

window = tk.Tk()
window.title("Rock-Paper-Scissor Game")
window.geometry("400x650+400+100")
window.resizable(False, False)

window.iconbitmap("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 4/img2.ico")

usernameValue = StringVar()

bg_image = Image.open("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 4/img1.jpg")
bg_photo = ImageTk.PhotoImage(bg_image)
bg_label = tk.Label(window, image=bg_photo)
bg_label.place(relwidth=1, relheight=1)

title_label = tk.Label(window, text="Rock-Paper Scissors", font=("Arial", 20, "bold"), fg="yellow", bg="black", padx=5, pady=10)
title_label.place(x=50, y=20)

title_label2 = tk.Label(window, text="Username", font=("Arial", 18, "bold"), fg="white", bg="black", padx=5, pady=10)
title_label2.place(x=30, y=200)

username_entry = tk.Entry(window, font=("Arial", 18), textvariable=usernameValue)
username_entry.place(x=180, y=210)

letsplay_button = Button(window, text="Let's Play", command=please_continue, height=3, width=13, bd=6, bg="black", fg="pink")
letsplay_button.place(x=180, y=300)

window.mainloop()


#main_gui.py
import tkinter as tk
from tkinter import Button
from PIL import Image, ImageTk

window=tk.Tk()
window.title("Rock-Paper-Scissor Game")
window.geometry("400x650+400+100")
window.resizable("False","False")

window.iconbitmap("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 4/img2.ico")



bg_image = Image.open("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 4/img1.jpg")
bg_photo = ImageTk.PhotoImage(bg_image)
bg_label = tk.Label(window, image=bg_photo)
bg_label.place(relwidth=1, relheight=1)


title_label = tk.Label(window, text="Rock-Paper Scissors", font=("Arial", 20, "bold"), fg="yellow", bg="black", padx=5, pady=10)
title_label.place(x=50, y=20)



Person_label = tk.Label(window, text="Person : ", font=("Arial", 18, "bold"), fg="yellow", bg="black", padx=5, pady=10)
Person_label.place(x=30, y=200)

Computer_label = tk.Label(window, text="Computer : ", font=("Arial", 18, "bold"), fg="white", bg="black", padx=5, pady=10)
Computer_label.place(x=210, y=200)


person_entry = tk.Entry(window,font=("Arial",10),width=5)
person_entry.place(x=130,y=220)

computer_entry = tk.Entry(window,font=("Arial",10),width=5)
computer_entry.place(x=340,y=220)


rock_button=Button(window, text="Rock",  height=3, width=13, bd=6,bg="red",fg="white").place(x=10, y=300)
paper_button=Button(window, text="Paper",  height=3, width=13, bd=6,bg="red",fg="white").place(x=150, y=300)
scissor_button=Button(window, text="Scissor",  height=3, width=13, bd=6,bg="red",fg="white").place(x=300, y=300)




window.mainloop()

#dummy program1.py
import random
user = input("Rock,Paper,Scissors choose one : ").lower()
choose = ["rock","paper","scissors"]
computer=random.choice(choose)

if user == computer:
    print("Tie!")
elif user=="rock" and computer=="scissors":
    print("You win !")
elif user=="paper" and computer=="rock":
    print("You win !")
elif user=="scissors" and computer=="paper":
    print("You win !")
else:
    print("Computer wins !")

#dummy program2.py
import random
rock=1
paper=2
scissors=3

user_choice=int(input("Enter your choice(1.rock,2.paper,3.scissors):"))
computer_choice=random.randint(1,3)

if user_choice == 1 and computer_choice == 1:
    print("Tie!")
elif user_choice == 1 and computer_choice == 3:
    print("You win!")
elif user_choice == 3 and computer_choice == 2:
    print("You win!")
elif user_choice == 2 and computer_choice == 1:
    print("You win!")
else:
    print("Computer win!")


#dummy program3.py
import random
def rock_paper_scissors():
    print("Welcome to Rock,Paper and Scissors!")
    print("Choose : Rock, Paper , or Scissors")

    choices = ["rock","paper","scissors"]

    while True:
        player_choice = input("Your choice : ").lower()

        if player_choice not in choices:
            print("Invalid choice. Please choose rock,paper or scissors.")
            continue
        computer_choice=random.choice(choices)
        print("Computer chose : ",computer_choice)


        if player_choice == computer_choice:
            print("It's a tie")

        elif player_choice == "rock" and computer_choice == "scissors":
            print("Player wins")
        elif player_choice == "paper" and computer_choice == "rock":
            print("Player wins")
        elif player_choice == "scissors" and computer_choice == "paper":
            print("Player wins")
        else:
            print("Computer wins")

        play_again = input("Do you want to play again ? (yes/no) : ").lower()
        if play_again != "yes":
            print("Thanks for Playing , Good Bye !!")
            break

rock_paper_scissors()
        
    
#dummy program4.py
import random

def rock_paper_scissors():
    choices = ["rock", "paper", "scissors"]
    player_score = 0
    computer_score = 0

    while True:
        player = input("Enter rock, paper, or scissors (or 'quit' to exit): ").lower()
        if player == "quit":
            print(f"Final Score - You: {player_score}, Computer: {computer_score}")
            break

        if player not in choices:
            print("Invalid input! Try again.")
            continue

        computer = random.choice(choices)
        print(f"Computer chose: {computer}")

        if player == computer:
            print("It's a tie!")
        elif (player == "rock" and computer == "scissors") or \
             (player == "paper" and computer == "rock") or \
             (player == "scissors" and computer == "paper"):
            print("You win!")
            player_score += 1
        else:
            print("Computer wins!")
            computer_score += 1

        

rock_paper_scissors()

#dummy program5.py
import random
player1 = input('Select Rock, Paper, or Scissor: ').lower()
player2 = random.choice(['Rock', 'Paper', 'Scissor']).lower()
print('Player 2 selected: ', player2)

if player1 == 'rock' and player2 == 'paper':
    print('Player 2 Won')
elif player1 == 'paper' and player2 == 'scissor':
    print('Player 2 Won')
elif player1 == 'scissor' and player2 == 'rock':
    print('Player 2 Won')
elif player1 == player2:
    print('Tie')
else:
    print('Player 1 Won')


#final.py
import tkinter as tk
from tkinter import Button
from PIL import Image, ImageTk
import random

# Initialize score variables
player_score = 0
computer_score = 0

# Function to handle the game logic
def play(choice):
    global player_score, computer_score
    choices = ["rock", "paper", "scissors"]
    computer_choice = random.choice(choices)

    person_entry.config(state="normal")
    person_entry.delete(0, tk.END)
    person_entry.insert(0, choice)
    person_entry.config(state="readonly")

    computer_entry.config(state="normal")
    computer_entry.delete(0, tk.END)
    computer_entry.insert(0, computer_choice)
    computer_entry.config(state="readonly")

    # Determine winner
    if choice == computer_choice:
        result_label.config(text="It's a tie!", fg="blue")
    elif (choice == "rock" and computer_choice == "scissors") or \
         (choice == "paper" and computer_choice == "rock") or \
         (choice == "scissors" and computer_choice == "paper"):
        result_label.config(text="You Win!", fg="green")
        player_score += 1
    else:
        result_label.config(text="Computer Wins!", fg="red")
        computer_score += 1

    # Update score labels
    player_score_label.config(text=f"Player Score: {player_score}")
    computer_score_label.config(text=f"Computer Score: {computer_score}")

# Function to reset the game (Play Again)
def reset_game():
    person_entry.config(state="normal")
    person_entry.delete(0, tk.END)
    person_entry.config(state="readonly")

    computer_entry.config(state="normal")
    computer_entry.delete(0, tk.END)
    computer_entry.config(state="readonly")

    result_label.config(text="", fg="black")

# Function to exit the game
def quit_game():
    window.destroy()

# Create main window
window = tk.Tk()
window.title("Rock-Paper-Scissor Game")
window.geometry("400x700+400+100")
window.resizable(False, False)

# Set window icon
window.iconbitmap("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 4/img2.ico")

# Background image
bg_image = Image.open("C:/Users/anura/OneDrive/MSCBD/Data Science/Big Data Analytics/Internships/Python Programming Internship/Task 4/img1.jpg")
bg_image = bg_image.resize((400, 700), Image.LANCZOS)
bg_photo = ImageTk.PhotoImage(bg_image)
bg_label = tk.Label(window, image=bg_photo)
bg_label.place(relwidth=1, relheight=1)

# Title label
title_label = tk.Label(window, text="Rock-Paper-Scissors", font=("Arial", 20, "bold"), fg="yellow", bg="black", padx=5, pady=10)
title_label.place(x=50, y=20)

# Player and Computer labels
Person_label = tk.Label(window, text="Person:", font=("Arial", 18, "bold"), fg="yellow", bg="black")
Person_label.place(x=30, y=200)

Computer_label = tk.Label(window, text="Computer:", font=("Arial", 18, "bold"), fg="white", bg="black")
Computer_label.place(x=210, y=200)

# Entry fields for choices
person_entry = tk.Entry(window, font=("Arial", 10), width=10, state="readonly")
person_entry.place(x=130, y=220)

computer_entry = tk.Entry(window, font=("Arial", 10), width=10, state="readonly")
computer_entry.place(x=340, y=220)

# Result label
result_label = tk.Label(window, text="", font=("Arial", 16, "bold"), fg="black", bg="white", pady=10)
result_label.place(x=120, y=400)

# Score Labels
player_score_label = tk.Label(window, text="Player Score: 0", font=("Arial", 14, "bold"), fg="yellow", bg="black")
player_score_label.place(x=30, y=500)

computer_score_label = tk.Label(window, text="Computer Score: 0", font=("Arial", 14, "bold"), fg="white", bg="black")
computer_score_label.place(x=210, y=500)

# Buttons
rock_button = Button(window, text="Rock", height=3, width=13, bd=6, bg="red", fg="white", command=lambda: play("rock"))
rock_button.place(x=10, y=300)

paper_button = Button(window, text="Paper", height=3, width=13, bd=6, bg="red", fg="white", command=lambda: play("paper"))
paper_button.place(x=150, y=300)

scissor_button = Button(window, text="Scissors", height=3, width=13, bd=6, bg="red", fg="white", command=lambda: play("scissors"))
scissor_button.place(x=300, y=300)

# Play Again Button
play_again_button = Button(window, text="Play Again", height=2, width=15, bd=5, bg="blue", fg="white", command=reset_game)
play_again_button.place(x=100, y=600)

# Quit Button
quit_button = Button(window, text="Quit", height=2, width=15, bd=5, bg="black", fg="white", command=quit_game)
quit_button.place(x=220, y=600)

window.mainloop()
